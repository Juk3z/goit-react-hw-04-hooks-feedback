{"version":3,"sources":["Components/Feedback/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js","Components/Feedback/styles.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","buttonNames","Object","keys","map","item","className","styles","btn","onClick","Math","floor","random","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","defaultProps","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedBack","reduce","acc","totalScores","evt","stateName","target","textContent","percentage","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOA8BeA,MA3Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAM5BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,mCACGE,EAAYG,KAAI,SAAAC,GAAI,OACnB,wBACEC,UAAWC,IAAOC,IAElBC,QAAST,EAHX,SAKGK,GAZAK,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,SCoBhCC,MAxBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,gDAAmBD,KACnB,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACRE,EACC,mDAAsBA,EAAtB,OAEA,8DCVR,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,KAKPF,EAAQG,aAAe,CACrBF,MAAO,cAQMD,QClBf,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,IAGbD,EAAaD,aAAe,CAC1BE,QAAS,iBAMID,QCwDAE,MA/Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAkBMC,EAAqB,WAEzB,MADkB,CAAChB,EAAMC,EAASC,GACjBe,QAAO,SAACC,EAAK3B,GAAN,OAAgB2B,EAAO3B,IAAO,IAYlD4B,EAAcH,IACpB,OACE,qCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAAS,CAAEe,OAAMC,UAASC,OAC1BhB,gBApCY,SAACkC,GACnB,IAAMC,EAAYD,EAAIE,OAAOC,YACX,SAAdF,GACFR,EAAQb,EAAO,GAGC,YAAdqB,GACFP,EAAWb,EAAU,GAGL,QAAdoB,GACFN,EAAOb,EAAM,QA6Bb,cAAC,EAAD,CAASI,MAAM,aAAf,SACIa,EAIA,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,mBA7B8B,SAAAD,GACtC,GAAc,IAAVA,EACF,OAAO,EAET,IACMqB,EAAc,IAAMrB,EADJH,EAEtB,OAAOJ,KAAKC,MAAM2B,GAuBUC,CAAgCN,KAPtD,cAAC,EAAD,CAAcT,QAAQ,4BClDhCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,IAAM,uB","file":"static/js/main.df780805.chunk.js","sourcesContent":["import styles from './styles.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n\n  const generateId = () => {\n    return Math.floor(Math.random() * 10000) + 1;\n  };\n\n  const buttonNames = Object.keys(options);\n  return (\n    <>\n      {buttonNames.map(item => (\n        <button\n          className={styles.btn}\n          key={generateId()}\n          onClick={onLeaveFeedback}\n        >\n          {item}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <h3>Total Scores: {total}</h3>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      {positivePercentage ? (\n        <h3>Positive scores: {positivePercentage}%</h3>\n      ) : (\n        <h3>Positive scores: no have</h3>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: 'Your title',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: 'empty message',\n};\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport FeedbackOptions from './Components/Feedback/';\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickHandle = (evt) => {\n    const stateName = evt.target.textContent;\n    if (stateName === 'good') {\n      setGood(good + 1);\n    };\n\n    if (stateName === 'neutral') {\n      setNeutral(neutral + 1);\n    };\n\n    if (stateName === 'bad') {\n      setBad(bad + 1);\n    };\n\n  };\n\n  const countTotalFeedBack = () => {\n    const allScores = [good, neutral, bad];\n    return allScores.reduce((acc, item) => (acc += item), 0);\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    if (total === 0) {\n      return 0;\n    }\n    const positiveScore = good;\n    const percentage = (100 / total) * positiveScore;\n    return Math.floor(percentage);\n  };\n\n  const totalScores = countTotalFeedBack();\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={clickHandle}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {!totalScores\n          ?\n          <Notification message=\"No feedback given\" />\n          :\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedBack()}\n            positivePercentage={countPositiveFeedbackPercentage(totalScores)}\n          />\n        }\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__33_-i\"};"],"sourceRoot":""}